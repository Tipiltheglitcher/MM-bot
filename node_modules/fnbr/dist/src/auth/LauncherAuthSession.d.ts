/// <reference types="node" />
import AuthSession from './AuthSession';
import { AuthSessionType } from '../../resources/enums';
import type Client from '../Client';
import type { LauncherAuthData } from '../../resources/structs';
declare class LauncherAuthSession extends AuthSession<AuthSessionType.Launcher> {
    app: string;
    clientsService: string;
    displayName: string;
    isInternalClient: boolean;
    inAppId: string;
    scope: string[];
    refreshToken: string;
    refreshTokenExpiresAt: Date;
    refreshTimeout?: NodeJS.Timeout;
    constructor(client: Client, data: LauncherAuthData, clientSecret: string);
    verify(forceVerify?: boolean): Promise<boolean>;
    createExchangeCode(): Promise<string>;
    revoke(): Promise<void>;
    refresh(): Promise<void>;
    initRefreshTimeout(): void;
    static create(client: Client, clientId: string, clientSecret: string, data: any): Promise<LauncherAuthSession>;
}
export default LauncherAuthSession;
